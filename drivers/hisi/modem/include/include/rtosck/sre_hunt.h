/*--------------------------------------------------------------------------------------------------------------------------*/
/*!!Warning: This is a key information asset of Huawei Tech Co.,Ltd                                                         */
/*CODEMARK:kOyQZYzjDpyGdBAEC2GaWrXNs8MZYk9cpFfgXfKX0g1VVtQNxHnHCKsK8caFMiW8LvCCkwIW
Tc6iJlHGFi3nUeJwZnaqeEUBwq/bzU5cp8JMIZQR60CPwhsVGkig7D46L1mTcjaBXLwtoHt/
6v3DarO29rxIXESQDaPZcfemc3RIahcAVv/y+GVavueUkW3g2DpzzbIDSTgrb5H+Bii0UwM5
3uc0a1gzCQoLSu2H2QBVHG5XQ/XH49K9ulpHF6rLFuGTWZckU0S92T92Ev+0tA==*/
/*--------------------------------------------------------------------------------------------------------------------------*/
/**
  * @file sre_hunt.h
  *
  * Copyright(C), 2008-2050, Huawei Tech. Co., Ltd. ALL RIGHTS RESERVED. \n
  *
  * 描述：PID获取的对外头文件。\n
  */

#ifndef _SRE_HUNT_H
#define _SRE_HUNT_H

#include "sre_base.h"

#ifdef __cplusplus
#if __cplusplus
extern "C" {
#endif /* __cpluscplus */
#endif /* __cpluscplus */

/**@defgroup sre_hunt Hunt处理
  *@ingroup SRE_comm
  */

/**
 * @ingroup sre_hunt
 * HUNT错误码：HUNT模块初始化失败。
 *
 * 值: 0x02001f00
 *
 * 解决方案：确认申请共享静态fsc内存或者私有fsc内存分区是否失败。
 */
#define OS_ERRNO_HUNT_INIT_ERROR            SRE_ERRNO_OS_ERROR(OS_MID_HUNT, 0x00)

/**
 * @ingroup sre_hunt
 * HUNT错误码：创建任务或软中断时，线程名重名。
 *
 * 值: 0x02001f01
 *
 * 解决方案：创建任务或软中断时，确保线程名本核内唯一。
 */
#define OS_ERRNO_HUNT_THREAD_NAME_REPEAT    SRE_ERRNO_OS_ERROR(OS_MID_HUNT, 0x01)

/**
 * @ingroup sre_hunt
 * HUNT错误码：通过线程ID或线程名获取线程PID时，该线程未创建或已删除。
 *
 * 值: 0x02001f02
 *
 * 解决方案：确保线程已创建且未被删除。
 */
#define OS_ERRNO_HUNT_THREAD_NOT_CREAT      SRE_ERRNO_OS_ERROR(OS_MID_HUNT, 0x02)

/**
 * @ingroup sre_hunt
 * HUNT错误码：通过线程ID或线程名获取线程PID时，入参非法。
 *
 * 值: 0x02001f03
 *
 * 解决方案：确保指针非空，以及核号合法。
 */
#define OS_ERRNO_HUNT_ILLEGAL_INPUT         SRE_ERRNO_OS_ERROR(OS_MID_HUNT, 0x03)

/**
 * @ingroup sre_hunt
 * HUNT错误码：通过线程ID或线程名获取线程PID时，Hunt还表没有初始化。
 *
 * 值: 0x02001f04
 *
 * 解决方案：确保线程所在核的hunt表已初始化。
 */
#define OS_ERRNO_HUNT_NOT_INIT              SRE_ERRNO_OS_ERROR(OS_MID_HUNT, 0x04)

/**
* @ingroup sre_hunt
* @brief 通过指定核的线程(任务、软中断)名获取其PID。
*
* @par 描述:
* 通过指定核的线程(任务、软中断)名获取线程PID。
* @attention
* <ul>
* <li>本核调用#SRE_HuntMature后调用该接口，会检查目的核是否调用#SRE_HuntMature，如果调用了，则继续进行查询操作，否则一直等待。</li>
* <li>本核调用#SRE_HuntMature之前调用该接口，不关注目的核是否调用#SRE_HuntMature，直接进行查询操作。</li>
* </ul>
*
* @param ucCoreID  [IN] 类型为#UINT8，线程所在核号[0,OS_MAX_CORE_NUM-1]。
* @param pThreadName [IN] 类型为#CHAR*，线程名长度范围[1,15]。
* @param puwPID [OUT] 类型为#UINT32*，线程PID。
*
* @retval #OS_ERRNO_HUNT_THREAD_NOT_CREAT 0x02001f02，该线程未创建或已删除。
* @retval #OS_ERRNO_HUNT_ILLEGAL_INPUT    0x02001f03，入参非法。
* @retval #OS_ERRNO_HUNT_NOT_INIT         0x02001f04，hunt还表没有初始化。
* @retval #SRE_OK                         0x00000000，获取PID成功。
* @par 依赖:
* <ul><li>sre_hunt.h：该接口声明所在的头文件。</li></ul>
* @since RTOSck V100R001C01
* @see SRE_HuntMature
*/
extern UINT32 SRE_HuntByName(UINT8 ucCoreID, CHAR *pThreadName, UINT32 *puwPID);

/**
* @ingroup sre_hunt
* @brief 标记本核所有的任务和软中断已创建完成（OS的IDLE除外），其它核可以成功查询本核的PID。
*
* @par 描述:
* 置上本核mature标志。同时置标志：使得本核在调用#SRE_HuntByName时，如果目的核没有启动，则一直等待，直到目的核置上了mature标志才返回查询结果。
* @attention
* <ul>
* <li>必须在本核所有的任务和软中断（OS的IDLE除外）创建完成之后调用。</li>
* </ul>
*
* @param 无。
*
* @retval 无。
* @par 依赖:
* <ul><li>sre_hunt.h：该接口声明所在的头文件。</li></ul>
* @since RTOSck V100R001C01
* @see SRE_HuntByName
*/
extern VOID SRE_HuntMature(VOID);


#ifdef __cplusplus
#if __cplusplus
}
#endif /* __cpluscplus */
#endif /* __cpluscplus */

#endif /* _SRE_HUNT_H */

 /**
  * History:
  * 2010-03-10 z00134877: Create this file.
  *
  * vi: set expandtab ts=4 sw=4 tw=80:
  */

